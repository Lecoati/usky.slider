@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    var slider = CurrentPage.slider;

    var width = ConvertToDecimal(slider.width.Value, 0m);
    var height = ConvertToDecimal(slider.height.Value, 0m);

    var editorWidth = ConvertToDecimal(slider.editorWidth.Value, width);
    var editorHeight = ConvertToDecimal(slider.editorHeight.Value, height);

    var widthFactor = width / editorWidth;
    var heightFactor = height / editorHeight;
}

<div class="tp-banner-container">
    <div class="tp-banner">
        <ul>
            @foreach (var index in slider.slides)
            {
                var dataTransition = !string.IsNullOrEmpty(index.dataTransition.ToString()) ? index.dataTransition : null;
                var dataSlotamount = !string.IsNullOrEmpty(index.dataSlotamount.ToString()) ? index.dataSlotamount : null;
                var dataDelay = !string.IsNullOrEmpty(index.dataDelay.ToString()) ? index.dataDelay : null;
                var dataMasterspeed = !string.IsNullOrEmpty(index.dataMasterspeed.ToString()) ? index.dataMasterspeed : null;
                var backgroundColor = !string.IsNullOrEmpty(index.backgroundColor.ToString()) ? "background-color:" + index.backgroundColor : null;

                <li data-transition="@dataTransition" data-slotamount="@dataSlotamount" data-delay="@dataDelay" data-masterspeed="@dataMasterspeed">

                    <img src="@(!string.IsNullOrEmpty(index.mediaSrc.ToString()) ? index.mediaSrc : "/App_Plugins/Lecoati.uSky.Slider/assets/transparent.png")"
                         style="@backgroundColor"
                         data-bgfit="cover"
                         data-bgposition="left top"
                         data-bgrepeat="no-repeat">

                    @foreach (var layer in index.layers)
                    {

                        var datax = ConvertToDecimal(layer.dataX, 0m) * widthFactor;
                        var datay = ConvertToDecimal(layer.dataY, 0m) * widthFactor;
                        var padding = (ConvertToDecimal(layer.padding, 0m) * widthFactor) + "px";
                        var fontSize = (ConvertToDecimal(layer.fontSize, 0m) * widthFactor) + "px";
                        var lineHeight = (ConvertToDecimal(layer.fontSize, 0m) * widthFactor) + "px";

                        var layerwidth = Math.Round(ConvertToDecimal(layer.width, 0m) * widthFactor) + "px";

                        var layerStyle = new System.Text.StringBuilder();
                        layerStyle.Append("z-index: 4;");
                        if (layer.backgroundColor != null && !string.IsNullOrEmpty(layer.backgroundColor.ToString()))
                        {
                            layerStyle.Append(string.Format("background-color: {0};", layer.backgroundColor.ToString()));
                        }

                        if (layer.color != null && !string.IsNullOrEmpty(layer.color.ToString()))
                        {
                            layerStyle.Append(string.Format("color: {0};", layer.color.ToString()));
                        }
                        if (layer.customCss != null && !string.IsNullOrEmpty(layer.customCss.ToString()))
                        {
                            layerStyle.Append(string.Format("{0}", layer.customCss.ToString()));
                        }
                        if (padding != null)
                        {
                            layerStyle.Append(string.Format("padding: {0};", padding));
                        }
                        if (layer.fontSize != null)
                        {
                            layerStyle.Append(string.Format("font-size: {0};", fontSize));
                        }
                        if (layer.lineHeight != null)
                        {
                            layerStyle.Append(string.Format("line-height: {0};", lineHeight));
                        }

                        <div class="tp-caption @layer.animationClass"
                             data-x="@datax"
                             data-y="@datay"
                             data-speed="@layer.dataSpeed"
                             data-start="@layer.dataStart"
                             data-easing="@layer.dataEasing"
                             style="@layerStyle.ToString()">

                            @if (layer.type == "text")
                            {
                                @Html.Raw(layer.content)
                            }
                            @if (layer.type == "embed")
                            {
                                @Html.Raw(layer.content)
                            }
                            @if (layer.type == "image")
                            {
                                <img src="@Html.Raw(layer.content)" width="@layerwidth">
                            }

                        </div>
                    }
                </li>
            }
        </ul>

    </div>
</div>

<script type="text/javascript">
    jQuery(document).ready(function () {
        jQuery('.tp-banner').revolution(
        {
            delay: 9000,
            @( width > 0 ? "startwidth: " + width + "," : "")
            @( height > 0 ? "startheight: " + height + "," : "")
            hideThumbs: 1,
        });
    });
</script>

@functions
{
    private static decimal ConvertToDecimal(object first, decimal second)
    {
        if (first == null)
        {
            return 0m;
        }

        var firstAsString = first.ToString();
        if (!string.IsNullOrEmpty(firstAsString))
        {
            var dec = second;

            if (decimal.TryParse(firstAsString, out dec))
            {
                return dec;
            }
        }
        return second;
    }

}
