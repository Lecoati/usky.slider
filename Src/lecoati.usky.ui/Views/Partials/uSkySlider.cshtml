@inherits Umbraco.Web.Mvc.UmbracoTemplatePage

@{
    dynamic slider = @Model.Content.GetPropertyValue("slider");

    decimal width = !string.IsNullOrEmpty(slider.width.Value.ToString()) ? decimal.Parse(slider.width.Value.ToString()) : 0;
    decimal height = !string.IsNullOrEmpty(slider.height.Value.ToString()) ? decimal.Parse(slider.height.Value.ToString()) : 0;
    decimal editorWidth = !string.IsNullOrEmpty(slider.editorWidth.Value.ToString()) ? decimal.Parse(slider.editorWidth.Value.ToString()) : width;
    decimal editorHeight = !string.IsNullOrEmpty(slider.editorHeight.Value.ToString()) ? decimal.Parse(slider.editorHeight.Value.ToString()) : height;

    var widthFactor = width / editorWidth;
    var heightFactor = height / editorHeight;

    var cssContainer = slider.cssContainer.Value.ToString();
    var cssSlider = slider.cssSlider.Value.ToString();
}

<div class="@cssContainer tp-banner-container">
    <div class="@cssSlider tp-banner">
        <ul>
            @foreach (var index in slider.slides)
            {
                var dataTransition = !string.IsNullOrEmpty(index.dataTransition.ToString()) ? index.dataTransition : null;
                var dataSlotamount = !string.IsNullOrEmpty(index.dataSlotamount.ToString()) ? index.dataSlotamount : null;
                var dataDelay = !string.IsNullOrEmpty(index.dataDelay.ToString()) ? index.dataDelay : null;
                var dataMasterspeed = !string.IsNullOrEmpty(index.dataMasterspeed.ToString()) ? index.dataMasterspeed : null;
                var dataThumb = !string.IsNullOrEmpty(index.dataThumbMediaSrc.ToString()) ? index.dataThumbMediaSrc : null;

                //calculate background image and color 
                //Note: uses lazyload to load background img and only sets background-color if defined
                var bgStyle = !string.IsNullOrEmpty(index.bgColor.ToString()) ? "background-color:" + index.bgColor : null;
                var bgKenBurns = index.bgKenBurns.Value ? "on" : "off";

                <li data-transition="@dataTransition" data-slotamount="@dataSlotamount" data-delay="@dataDelay" data-masterspeed="@dataMasterspeed" data-thumb="@dataThumb">
                    
                    @*Main Image*@
                    <img src="/App_Plugins/Lecoati.uSky.Slider/assets/transparent.png"
                         alt="@index.bgAlt" data-lazyload="@index.bgMediaSrc" style="@bgStyle"
                         data-bgposition="@index.bgPosition" data-bgfit="@index.bgFit"
                         data-kenburns="@bgKenBurns" data-duration="@index.dataDuration" data-ease="@index.dataEase" 
                         data-bgfitend="@index.bgFitEnd" data-bgpositionend="@index.bgPositionEnd"/>

                    @*Layers*@

                    @{var zIndex = 1;}
                    @foreach (var layer in index.layers)
                    {
                        zIndex++;
                        var dataX = layer.dataX != null && !string.IsNullOrEmpty(layer.dataX.ToString()) ? (decimal.Parse(layer.dataX.ToString())*widthFactor).ToString() : "0";
                        var dataY = layer.dataY != null && !string.IsNullOrEmpty(layer.dataY.ToString()) ? (decimal.Parse(layer.dataY.ToString())*widthFactor).ToString() : "0";

                        //configure custom styles
                        var layerBackgroundColor = layer.backgroundColor != null && !string.IsNullOrEmpty(layer.backgroundColor.ToString()) ? " background-color: " + layer.backgroundColor.Value + ";": null;
                        var layerColor = layer.color != null && !string.IsNullOrEmpty(layer.color.ToString()) ? " color: " + layer.color.Value + ";" : null;
                        var layerPadding = layer.padding != null && !string.IsNullOrEmpty(layer.padding.ToString()) ? " padding: " + layer.padding.Value + ";" : null;
                        var layerFontSize = layer.fontSize != null && !string.IsNullOrEmpty(layer.fontSize.ToString()) ? " font-size: " + layer.fontSize.Value + ";" : null;
                        var layerHeight = layer.height != null && !string.IsNullOrEmpty(layer.height.ToString()) ? " line-height: " + layer.height.Value + "px;" : null;
                        var layerWidth = layer.width != null && !string.IsNullOrEmpty(layer.width.ToString()) ? " " + (decimal.Parse(layer.width.ToString()) * widthFactor).ToString() + "px" : "0px";

                            <div class="tp-caption @layer.customCss @layer.animationClass.Value"
                                 data-x="@dataX"
                                 data-y="@dataY"
                                 data-speed="@layer.dataSpeed"
                                 data-endspeed="@layer.dataEndSpeed"
                                 data-start="@layer.dataStart"
                                 data-easing="@layer.dataEasing"
                                 data-splitin="@layer.dataSplitIn"
                                 data-splitout="@layer.dataSplitOut"
                                 data-elementdelay="@layer.dataElementDelay"
                                 data-customin="@layer.customIn"
                                 data-customout="@layer.customOut"
                                 style="z-index: @zIndex; @layerBackgroundColor @layerColor @layerPadding @layerFontSize @layerHeight @layer.customStyle">

                                @if (layer.type == "text")
                                {
                                    @Html.Raw(layer.content)
                                }
                                @if (layer.type == "embed")
                                {
                                    @Html.Raw(layer.content)
                                }
                                @if (layer.type == "image")
                                {
                                    <img src="/App_Plugins/Lecoati.uSky.Slider/assets/transparent.png"
                                         width="@layerWidth" data-lazyload="@Html.Raw(layer.content)"/>
                                }

                            </div>
                    }
                </li>
            }
        </ul>
    </div>
</div>

<script src="//ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js"></script>
<script>
    WebFont.load({
        google: {
            families: [@LoadFonts(slider)]
        }
    });

    jQuery(document).ready(function () {
        jQuery('.tp-banner').revolution(
         {
             delay: 9000,
             @( width > 0 ? "startwidth: " + width + "," : "")
             @( height > 0 ? "startheight: " + height + "," : "")
             hideThumbs: 1,
         });
    });
</script>

@helper LoadFonts(dynamic slider)
{
    foreach (var index in slider.slides)
    {
        foreach (var layer in index.layers)
        {
            @MvcHtmlString.Create(string.Format("'{0}',", @layer.fontName))
        }
    }
}